{"version":3,"sources":["main.js","src/scripts/modules/menu.js","src/scripts/modules/smooth-links.js","src/scripts/modules/reviews-slider.js","src/scripts/modules/slide-effects.js","src/scripts/modules/question-tabs.js","src/scripts/modules/modal.js","src/scripts/modules/route-tab.js","src/scripts/modules/form-validate.js","src/scripts/modules/send-form.js"],"names":["body","document","querySelector","menu","toggleButton","addEventListener","evt","preventDefault","classList","toggle","smoothLinks","querySelectorAll","onLickClick","id","target","getAttribute","remove","scrollIntoView","behavior","block","forEach","smoothLink","swiper","window","Swiper","init","swiperMode","desktop","matchMedia","noDesktop","matches","loop","slidesPerView","speed","autoplay","delay","disableOnInteraction","allowTouchMove","effect","fadeEffect","crossFade","destroy","slideToggle","duration","arguments","length","undefined","contains","add","getComputedStyle","display","element","style","removeProperty","height","offsetHeight","overflow","paddingTop","paddingBottom","marginTop","marginBottom","transitionProperty","transitionDuration","concat","setTimeout","slideDown","slideUp","buttons","lockButton","onButtonClick","currentButton","text","closest","button","buttonsOpenModel","hideModal","modal","onButtonOpenModelClick","name","dataset","closeButton","black","buttonOpenModel","tabs","mediaQuery","onTabClick","currentTab","tab","form","onLoad","response","ok","location","href","alert","onError","error","console","inputs","field","input","line","value","push","formData","FormData","fetch","method","then"],"mappings":"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","file":"main.min.js","sourcesContent":["(function () {\n'use strict';\n\nconst body = document.querySelector('body');\nconst menu = body.querySelector('.header__menu');\nconst toggleButton = body.querySelector('.header__burger');\n\nconst toggleButtonClickHandler = (evt) => {\n  evt.preventDefault();\n  menu.classList.toggle('active');\n  toggleButton.classList.toggle('active');\n  body.classList.toggle('lock');\n};\n\ntoggleButton.addEventListener('click', toggleButtonClickHandler);\n\nconst body$1 = document.querySelector('body');\nconst smoothLinks = body$1.querySelectorAll('.header__list-item, .footer__item-list');\nconst menu$1 = body$1.querySelector('.header__menu');\nconst toggleButton$1 = body$1.querySelector('.header__burger');\n\nconst onLickClick = (evt) => {\n  evt.preventDefault();\n  const id = evt.target.getAttribute('href');\n\n  menu$1.classList.remove('active');\n  toggleButton$1.classList.remove('active');\n  body$1.classList.remove('lock');\n\n  document.querySelector(id).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start',\n  });\n};\n\nsmoothLinks.forEach((smoothLink) => smoothLink.addEventListener('click', onLickClick));\n\nlet swiper = window.Swiper;\nlet init = false;\n\nconst swiperMode = () => {\n  const desktop = window.matchMedia('(min-width: 992px)');\n  const noDesktop = window.matchMedia('(min-width: 280px) and (max-width: 991px)');\n\n  if (desktop.matches) {\n    if (!init) {\n      init = true;\n\n      swiper = new window.Swiper('.swiper', {\n        loop: true,\n        slidesPerView: 1,\n        speed: 1500,\n        autoplay: {\n          delay: 9000,\n          disableOnInteraction: false,\n        },\n        allowTouchMove: false,\n        effect: 'fade',\n        fadeEffect: {\n          crossFade: true,\n        },\n      });\n    }\n  } else if (noDesktop.matches) {\n    const hasSwiperProperty = 'destroy' in swiper;\n\n    if (hasSwiperProperty) {\n      swiper.destroy();\n      init = false;\n    }\n  }\n};\n\nconst onLoad = () => {\n  swiperMode();\n};\n\nconst onResize = () => {\n  swiperMode();\n};\n\nwindow.addEventListener('load', onLoad);\nwindow.addEventListener('resize', onResize);\n\nconst slideUp = (target, duration = 500) => {\n  const element = target;\n\n  element.style.transitionProperty = 'height, margin, padding';\n  element.style.transitionDuration = `${duration}ms`;\n  element.style.height = `${element.offsetHeight}px`;\n  // eslint-disable-next-line no-unused-expressions\n  element.offsetHeight;\n  element.style.overflow = 'hidden';\n  element.style.height = 0;\n  element.style.paddingTop = 0;\n  element.style.paddingBottom = 0;\n  element.style.marginTop = 0;\n  element.style.marginBottom = 0;\n  window.setTimeout(() => {\n    element.style.display = 'none';\n    element.style.removeProperty('height');\n    element.style.removeProperty('padding-top');\n    element.style.removeProperty('padding-bottom');\n    element.style.removeProperty('margin-top');\n    element.style.removeProperty('margin-bottom');\n    element.style.removeProperty('overflow');\n    element.style.removeProperty('transition-duration');\n    element.style.removeProperty('transition-property');\n    element.classList.remove('_slide');\n  }, duration);\n};\n\nconst slideDown = (target, duration = 500) => {\n  const element = target;\n\n  element.style.removeProperty('display');\n  let { display } = window.getComputedStyle(element);\n  if (display === 'none') {\n    display = 'block';\n  }\n\n  element.style.display = display;\n  const height = element.offsetHeight;\n  element.style.overflow = 'hidden';\n  element.style.height = 0;\n  element.style.paddingTop = 0;\n  element.style.paddingBottom = 0;\n  element.style.marginTop = 0;\n  element.style.marginBottom = 0;\n  // eslint-disable-next-line no-unused-expressions\n  element.offsetHeight;\n  element.style.transitionProperty = 'height, margin, padding';\n  element.style.transitionDuration = `${duration}ms`;\n  element.style.height = `${height}px`;\n  element.style.removeProperty('padding-top');\n  element.style.removeProperty('padding-bottom');\n  element.style.removeProperty('margin-top');\n  element.style.removeProperty('margin-bottom');\n  window.setTimeout(() => {\n    element.style.removeProperty('height');\n    element.style.removeProperty('overflow');\n    element.style.removeProperty('transition-duration');\n    element.style.removeProperty('transition-property');\n    element.classList.remove('_slide');\n  }, duration);\n};\n\nconst slideToggle = (target, duration = 500) => {\n  if (!target.classList.contains('_slide')) {\n    target.classList.add('_slide');\n    if (window.getComputedStyle(target).display === 'none') {\n      return slideDown(target, duration);\n    }\n\n    return slideUp(target, duration);\n  }\n\n  return null;\n};\n\nconst buttons = document.querySelectorAll('.head-button');\nlet lockButton = false;\n\nconst onButtonClick = (evt) => {\n  evt.preventDefault();\n\n  const currentButton = evt.target;\n  const listItem = currentButton.closest('.question__list-item');\n  const text = listItem.querySelector('.text');\n\n  if (!lockButton) {\n    currentButton.classList.toggle('is-activated');\n    lockButton = true;\n\n    window.setTimeout(() => {\n      lockButton = false;\n    }, 500);\n  }\n\n  slideToggle(text);\n};\n\nbuttons.forEach((button) => button.addEventListener('click', onButtonClick));\n\nconst body$2 = document.querySelector('body');\nconst buttonsOpenModel = body$2.querySelectorAll('[data-modal]');\n\nconst hideModal = (modal) => {\n  body$2.classList.remove('hidden');\n  modal.classList.remove('is-activated');\n};\n\nconst onButtonOpenModelClick = (evt) => {\n  evt.preventDefault();\n\n  const name = evt.target.dataset.modal;\n  const modal = body$2.querySelector(`._modal[data-name='${name}']`);\n\n  body$2.classList.add('hidden');\n  modal.classList.add('is-activated');\n\n  const closeButton = modal.querySelector('.close');\n  const black = modal.querySelector('.black');\n\n  closeButton.addEventListener('click', () => hideModal(modal));\n  black.addEventListener('click', () => hideModal(modal));\n};\n\nbuttonsOpenModel.forEach((buttonOpenModel) => buttonOpenModel.addEventListener('click', onButtonOpenModelClick));\n\nconst tabs = document.querySelectorAll('.route__list-item');\nconst mediaQuery = window.matchMedia('(max-width: 767px)');\n\nconst onTabClick = (evt) => {\n  const currentTab = evt.target.closest('.route__list-item');\n\n  tabs.forEach((tab) => tab.classList.remove('is-activated'));\n  currentTab.classList.add('is-activated');\n\n  if (mediaQuery.matches) {\n    currentTab.scrollIntoView(true);\n  }\n};\n\ntabs.forEach((tab) => tab.addEventListener('click', onTabClick));\n\nconst formValidate = (form) => {\n  const inputs = form.querySelectorAll('[data-validate]');\n  const field = [];\n\n  inputs.forEach((input) => {\n    const line = input.closest('.form-group');\n\n    if (!input.value) {\n      field.push(input);\n      line.classList.add('some-form__line-required');\n      setTimeout(() => line.classList.remove('some-form__line-required'), 4000);\n    }\n  });\n\n  if (field.length) {\n    return false;\n  }\n\n  return true;\n};\n\nconst form = document.querySelector('.js-form-validate');\n\nconst onLoad$1 = (response) => {\n  if (response.ok) {\n    window.location.href = 'ok.html';\n  } else {\n    alert('Не удалось отправить форму');\n  }\n};\n\nconst onError = (error) => {\n  console.error(error);\n};\n\nconst formSubmitHandler = (evt) => {\n  evt.preventDefault();\n\n  const isFormValid = formValidate(evt.target);\n\n  if (isFormValid) {\n    const formData = new FormData(form);\n\n    fetch('sendform.php', { method: 'POST', body: formData })\n      .then(onLoad$1)\n      .catch(onError);\n  }\n};\n\nform.addEventListener('submit', formSubmitHandler);\n\n}());\n","const body = document.querySelector('body');\nconst menu = body.querySelector('.header__menu');\nconst toggleButton = body.querySelector('.header__burger');\n\nconst toggleButtonClickHandler = (evt) => {\n  evt.preventDefault();\n  menu.classList.toggle('active');\n  toggleButton.classList.toggle('active');\n  body.classList.toggle('lock');\n};\n\ntoggleButton.addEventListener('click', toggleButtonClickHandler);\n","const body = document.querySelector('body');\nconst smoothLinks = body.querySelectorAll('.header__list-item, .footer__item-list');\nconst menu = body.querySelector('.header__menu');\nconst toggleButton = body.querySelector('.header__burger');\n\nconst onLickClick = (evt) => {\n  evt.preventDefault();\n  const id = evt.target.getAttribute('href');\n\n  menu.classList.remove('active');\n  toggleButton.classList.remove('active');\n  body.classList.remove('lock');\n\n  document.querySelector(id).scrollIntoView({\n    behavior: 'smooth',\n    block: 'start',\n  });\n};\n\nsmoothLinks.forEach((smoothLink) => smoothLink.addEventListener('click', onLickClick));\n","let swiper = window.Swiper;\nlet init = false;\n\nconst swiperMode = () => {\n  const desktop = window.matchMedia('(min-width: 992px)');\n  const noDesktop = window.matchMedia('(min-width: 280px) and (max-width: 991px)');\n\n  if (desktop.matches) {\n    if (!init) {\n      init = true;\n\n      swiper = new window.Swiper('.swiper', {\n        loop: true,\n        slidesPerView: 1,\n        speed: 1500,\n        autoplay: {\n          delay: 9000,\n          disableOnInteraction: false,\n        },\n        allowTouchMove: false,\n        effect: 'fade',\n        fadeEffect: {\n          crossFade: true,\n        },\n      });\n    }\n  } else if (noDesktop.matches) {\n    const hasSwiperProperty = 'destroy' in swiper;\n\n    if (hasSwiperProperty) {\n      swiper.destroy();\n      init = false;\n    }\n  }\n};\n\nconst onLoad = () => {\n  swiperMode();\n};\n\nconst onResize = () => {\n  swiperMode();\n};\n\nwindow.addEventListener('load', onLoad);\nwindow.addEventListener('resize', onResize);\n","const slideUp = (target, duration = 500) => {\n  const element = target;\n\n  element.style.transitionProperty = 'height, margin, padding';\n  element.style.transitionDuration = `${duration}ms`;\n  element.style.height = `${element.offsetHeight}px`;\n  // eslint-disable-next-line no-unused-expressions\n  element.offsetHeight;\n  element.style.overflow = 'hidden';\n  element.style.height = 0;\n  element.style.paddingTop = 0;\n  element.style.paddingBottom = 0;\n  element.style.marginTop = 0;\n  element.style.marginBottom = 0;\n  window.setTimeout(() => {\n    element.style.display = 'none';\n    element.style.removeProperty('height');\n    element.style.removeProperty('padding-top');\n    element.style.removeProperty('padding-bottom');\n    element.style.removeProperty('margin-top');\n    element.style.removeProperty('margin-bottom');\n    element.style.removeProperty('overflow');\n    element.style.removeProperty('transition-duration');\n    element.style.removeProperty('transition-property');\n    element.classList.remove('_slide');\n  }, duration);\n};\n\nconst slideDown = (target, duration = 500) => {\n  const element = target;\n\n  element.style.removeProperty('display');\n  let { display } = window.getComputedStyle(element);\n  if (display === 'none') {\n    display = 'block';\n  }\n\n  element.style.display = display;\n  const height = element.offsetHeight;\n  element.style.overflow = 'hidden';\n  element.style.height = 0;\n  element.style.paddingTop = 0;\n  element.style.paddingBottom = 0;\n  element.style.marginTop = 0;\n  element.style.marginBottom = 0;\n  // eslint-disable-next-line no-unused-expressions\n  element.offsetHeight;\n  element.style.transitionProperty = 'height, margin, padding';\n  element.style.transitionDuration = `${duration}ms`;\n  element.style.height = `${height}px`;\n  element.style.removeProperty('padding-top');\n  element.style.removeProperty('padding-bottom');\n  element.style.removeProperty('margin-top');\n  element.style.removeProperty('margin-bottom');\n  window.setTimeout(() => {\n    element.style.removeProperty('height');\n    element.style.removeProperty('overflow');\n    element.style.removeProperty('transition-duration');\n    element.style.removeProperty('transition-property');\n    element.classList.remove('_slide');\n  }, duration);\n};\n\nconst slideToggle = (target, duration = 500) => {\n  if (!target.classList.contains('_slide')) {\n    target.classList.add('_slide');\n    if (window.getComputedStyle(target).display === 'none') {\n      return slideDown(target, duration);\n    }\n\n    return slideUp(target, duration);\n  }\n\n  return null;\n};\n\nexport default slideToggle;\n","import slideToggle from './slide-effects';\n\nconst buttons = document.querySelectorAll('.head-button');\nlet lockButton = false;\n\nconst onButtonClick = (evt) => {\n  evt.preventDefault();\n\n  const currentButton = evt.target;\n  const listItem = currentButton.closest('.question__list-item');\n  const text = listItem.querySelector('.text');\n\n  if (!lockButton) {\n    currentButton.classList.toggle('is-activated');\n    lockButton = true;\n\n    window.setTimeout(() => {\n      lockButton = false;\n    }, 500);\n  }\n\n  slideToggle(text);\n};\n\nbuttons.forEach((button) => button.addEventListener('click', onButtonClick));\n","const body = document.querySelector('body');\nconst buttonsOpenModel = body.querySelectorAll('[data-modal]');\n\nconst hideModal = (modal) => {\n  body.classList.remove('hidden');\n  modal.classList.remove('is-activated');\n};\n\nconst onButtonOpenModelClick = (evt) => {\n  evt.preventDefault();\n\n  const name = evt.target.dataset.modal;\n  const modal = body.querySelector(`._modal[data-name='${name}']`);\n\n  body.classList.add('hidden');\n  modal.classList.add('is-activated');\n\n  const closeButton = modal.querySelector('.close');\n  const black = modal.querySelector('.black');\n\n  closeButton.addEventListener('click', () => hideModal(modal));\n  black.addEventListener('click', () => hideModal(modal));\n};\n\nbuttonsOpenModel.forEach((buttonOpenModel) => buttonOpenModel.addEventListener('click', onButtonOpenModelClick));\n","const tabs = document.querySelectorAll('.route__list-item');\nconst mediaQuery = window.matchMedia('(max-width: 767px)');\n\nconst onTabClick = (evt) => {\n  const currentTab = evt.target.closest('.route__list-item');\n\n  tabs.forEach((tab) => tab.classList.remove('is-activated'));\n  currentTab.classList.add('is-activated');\n\n  if (mediaQuery.matches) {\n    currentTab.scrollIntoView(true);\n  }\n};\n\ntabs.forEach((tab) => tab.addEventListener('click', onTabClick));\n","const formValidate = (form) => {\n  const inputs = form.querySelectorAll('[data-validate]');\n  const field = [];\n\n  inputs.forEach((input) => {\n    const line = input.closest('.form-group');\n\n    if (!input.value) {\n      field.push(input);\n      line.classList.add('some-form__line-required');\n      setTimeout(() => line.classList.remove('some-form__line-required'), 4000);\n    }\n  });\n\n  if (field.length) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default formValidate;","import formValidate from './form-validate';\n\nconst form = document.querySelector('.js-form-validate');\n\nconst onLoad = (response) => {\n  if (response.ok) {\n    window.location.href = 'ok.html';\n  } else {\n    alert('Не удалось отправить форму');\n  }\n};\n\nconst onError = (error) => {\n  console.error(error);\n};\n\nconst formSubmitHandler = (evt) => {\n  evt.preventDefault();\n\n  const isFormValid = formValidate(evt.target);\n\n  if (isFormValid) {\n    const formData = new FormData(form);\n\n    fetch('sendform.php', { method: 'POST', body: formData })\n      .then(onLoad)\n      .catch(onError);\n  }\n};\n\nform.addEventListener('submit', formSubmitHandler);\n"]}